version: "3"
services:
  jenkins:
    image: ${DOCKER_IMAGE}
    container_name: jenkins
    user: root
    privileged: true
    environment:
      - JENKINS_OPTS="--prefix=/jenkins"
      - JENKINS_UC_DOWNLOAD="https://ftp.yz.yamagata-u.ac.jp/pub/misc/jenkins/"
      - JAVA_OPTS="-Djava.awt.headless=true -Dcom.sun.akuma.Daemon=daemonized"
      # - JAVA_OPTS="-Djava.awt.headless=true -Dcom.sun.akuma.Daemon=daemonized -Dcasc.jenkins.config=/var/jenkins_home/casc_configs/jenkins.yml"
      - TZ=Asia/Seoul
    labels:
{% if use_traefik %}
      - "traefik.enable=true"
      - "traefik.http.routers.jenkins.entrypoints=web,websecure"
      - "traefik.http.routers.jenkins.rule=Host(`${trf_domain}`) && PathPrefix(`/jenkins`)"
{% endif %}
{% if use_traefik and use_traefik_tls %}
      - "traefik.http.routers.jenkins.tls=true"
{% endif %}
{% if use_flame %}
      - "flame.type=application"
      - "flame.name=jenkins"
{% if use_traefik %}
      - "flame.url=http://{{ traefik_domain }}:{{ traefik_http_port }}"
{% endif %}
{% if not use_traefik %}
      - "flame.url=http://{{ jenkins_host}}:{{ jenkins_port }}"
{% endif %}
{% endif %}
    ports:
      - "{{ jenkins_port }}:8080"
      - "9090:9090"
      - "50000:50000"
    volumes:
{% if use_flyway %}
      - /data:/data
{% endif %}
{% if use_argocd %}
      - {{ jenkins_home }}/argocd/config:/root/.config/argocd/config
{% endif %}
{% if use_aws %}
      - {{ jenkins_home }}/.aws:/root/.aws
{% endif %}
{% if use_kubeconfig %}
      - {{ jenkins_home }}/kubeconfig:/root/.kube/config
{% endif %}
{% if use_ssh %}
      - {{ jenkins_home }}/.ssh/id_rsa:/root/.ssh/id_rsa
      - {{ jenkins_home }}/.ssh/id_rsa.pub:/root/.ssh/id_rsa.pub
{% endif %}
      - {{ jenkins_home }}/gitconfig:/root/.gitconfig
      - {{ jenkins_home }}/settings.xml:/root/.m2/settings.xml
      - {{ jenkins_data }}:/var/jenkins_home
      - {{ jenkins_data }}/casc_configs:/var/jenkins_home/casc_configs
      - {{ nexus_data }}:{{ nexus_data }}
      - /bin/docker:/bin/docker
      - /var/run/docker.sock:/var/run/docker.sock
      # - /usr/local/bin/kubectl:/usr/local/bin/kubectl
      # - /usr/bin/docker-compose:/usr/bin/docker-compose
      # - /usr/local/bin/argocd:/usr/local/bin/argocd
    restart: unless-stopped
    tty: true
{% if use_extra_hosts %}
    extra_hosts:
    {% for host in extra_hosts %}
    - {{ host }}
    {% endfor %}
{% endif %}
{% if use_dkr_net %}
    networks:
      - {{ dkr_network }}

networks:
  {{ dkr_network }}:
    external: true
{% endif %}
